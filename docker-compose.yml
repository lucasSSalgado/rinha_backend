# Use postgres/example user/password credentials
version: '3.1'
services:
  api1:
    build: .
    depends_on:
      postgres: 
        condition: service_healthy
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "40MB"

  api2:
    build: . 
    depends_on:
      postgres: 
        condition: service_healthy
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "40MB"

  postgres:
    image: postgres:alpine
    hostname: postgres
    environment:
      - POSTGRES_PASSWORD=example
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U admin -d postgres'"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.9"
          memory: "420MB"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

networks:
  app-network:
    